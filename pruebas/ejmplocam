from flask import Flask, render_template, Response
from flask_socketio import SocketIO
from camera2 import VideoCamera
import time

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret!"
socketio = SocketIO(app)
video = VideoCamera()
clients_connected = 0


@app.route("/")
def index():
    return render_template("ejem1.html")


@app.route("/calibracion")
def calibracion():
    return render_template("ejem2.html")


@app.route("/video_feed")
def video_feed():
    return Response(
        video_stream(), mimetype="multipart/x-mixed-replace; boundary=frame"
    )


def video_stream():
    if not video.state():
        video.start()

    while video.state():
        frame = video.get_frame()

        socketio.emit("update", {"message": "enviando video"})

        if frame is None:
            break

        yield (b"--frame\r\n" b"Content-Type: image/jpeg\r\n\r\n" + frame + b"\r\n\r\n")

    video.stop()


@socketio.on("connect")
def handle_connect():
    global clients_connected
    clients_connected += 1
    print("Cliente conectado. Total:", clients_connected)


@socketio.on("disconnect")
def handle_disconnect():
    global clients_connected
    clients_connected -= 1
    print("Cliente desconectado. Total:", clients_connected)

    if clients_connected <= 0:
        video.stop()


if __name__ == "__main__":
    socketio.run(app, host="0.0.0.0", port=5000, debug=True)
